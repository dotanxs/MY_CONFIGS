# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
default_orientation vertical

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:Inconsolata 8.5
font pango:FontAwesome 6.5
#font pango:monospace 7.5
#font pango:quicksand 9

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec "urxvt -e $SHELL -c 'screenfetch;$SHELL -i'"
#bindsym $mod+Return exec urxvt
bindsym $mod+Return exec st

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
bindsym $mod+d exec rofi -modi run -show run
#bindsym $mod+d exec rofi -modi run -show run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+c split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# <span font='FontAwesome'></span> # use font awesome in specific places.
set $workspace1 "1: "
set $workspace2 "2: "
set $workspace3 "3: "
set $workspace4 "4: "
set $workspace5 "5: "
set $workspace6 "6: "
#set $workspace6 "6:  "
set $workspace7 "7: "
set $workspace8 "8: "
set $workspace9 "9: "
set $workspace10 "10: "

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

assign [class="Firefox"] $workspace1
assign [class="URxvt"] $workspace2
assign [class="st-256color"] $workspace2
assign [class="Pcmanfm"] $workspace7
#assign [class="Spacefm"] $workspace6
assign [class="Code"] $workspace6
assign [class="Slack"] $workspace6
assign [class="Thunderbird"] $workspace8
assign [class="Signal"] $workspace9

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# COLOURS
#set $bg-color			#2f343f
set $bg3-color			#afafaf
#set $bg2-color			#2f343f
set $bg2-color			#002b36
set $bg-color			#757575
set $inactive-bg-color		#002b36
set $text-color			#676E7D
set $inactive-text-color 	#676E7D
#set $urgent-bg-color 		#E53935
set $urgent-bg-color 		#960018
set $urgent-bar-text-color	#000000
set $focused-bar-text-color	#afafaf

# WINDOW COLOURS
# 			border		    background	      text		      indicator
client.focused		$bg3-color          $bg3-color 	      $text-color	      #960018
client.unfocused 	$inactive-bg-color $inactive-bg-color $inactive-text-color    #960018
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color    #960018
client.urgent 		$urgent-bg-color   $urgent-bg-color   $text-color	      #960018

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)

# BAR
bar {
        #status_command i3status
        status_command i3blocks -c ~/.config/i3/i3blocks.conf 
	position bottom
	colors {
		background $bg2-color
		separator #757575
		#		   border	      background	 text
		focused_workspace  $bg2-color 	      $bg2-color 	 $focused-bar-text-color
		inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
		urgent_workspace   $urgent-bg-color   $urgent-bg-color   $focused-bar-text-color 
	}

}

### i3-gaps stuff ###

# Necessary for i3-gaps to work properly (pixel can be any value)
for_window [class="^.*"] border pixel 1.5

# Smart Gaps
smart_gaps on

# Smart Borders
smart_borders on

# Set inner/outer gaps
gaps inner 15
gaps outer 0

# Gaps mode
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute 1 toggle # mute mic

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 5 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 5 # decrease screen brightness

# Touchpad controls
#bindsym XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad

# Media player controls
#bindsym XF86AudioPlay exec playerctl play
#bindsym XF86AudioPause exec playerctl pause
#bindsym XF86AudioNext exec playerctl next
#bindsym XF86AudioPrev exec playerctl previous

bindsym XF86Explorer exec "~/.scripts/fuzzy-lock.sh"
exec xautolock -time 10 -locker "~/.scripts/fuzzy-lock.sh" &
bindsym XF86Tools exec systemctl suspend

# DEAD, MOŻE SIĘ PRZYDAĆ
#bindsym Print mode "skriny"
#
#mode "skriny" {
#    bindsym f exec scrot -e 'mv $f ~/screens/'; mode "default"
#    bindsym s exec scrots; mode "default"
#    bindsym Escape mode "default"
#}

# SCREENSHOT - FULL CAPTURE
bindsym Print exec scrot -e 'mv $f ~/screens/' && notify-send "screen'd" --urgency=low

# SCREENSHOT - SHUTTER APP
bindsym Shift+Print exec shutter --min_at_startup
exec shutter --min_at_startup

# STICKY WINDOW - FLOATING REQUIRED
bindsym $mod+Shift+s sticky toggle

# KEY INDICATORS
bindsym --release Caps_Lock exec pkill -SIGRTMIN+11 i3blocks
bindsym --release XF86AudioRaiseVolume exec pkill -SIGRTMIN+10 i3blocks
bindsym --release XF86AudioLowerVolume exec pkill -SIGRTMIN+10 i3blocks
bindsym --release XF86AudioMute exec pkill -SIGRTMIN+10 i3blocks
bindsym --release XF86AudioMicMute exec pkill -SIGRTMIN+10 i3blocks

bindsym $mod+F9 exec $HOME/.scripts/dmenu-mount.sh
bindsym $mod+F10 exec $HOME/.scripts/dmenu-umount.sh
bindsym $mod+F12 exec $HOME/.scripts/emoji-search.sh

exec compton -f
exec dunst -conf ~/.config/Dunst/dunstrc1
